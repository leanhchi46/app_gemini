@startuml
title Sơ đồ Luồng Khởi Động Ứng Dụng

!theme vibrant
skinparam activity {
    BackgroundColor #F5F5F5
    BorderColor #A9A9A9
    ArrowColor #333333
    ActorBorderColor black
    ActorBackgroundColor #EFEFEF
}
skinparam note {
    BackgroundColor #FFFFE0
    BorderColor #BDB76B
}

start

partition "main.py: Điểm khởi đầu" {
    :Thực thi `main.py`;
    note right
        Bắt đầu từ `if __name__ == "__main__":`
    end note

    :Phân tích đối số dòng lệnh
    (parse_arguments);
    note left
        Kiểm tra xem có tham số `--workspace` được truyền vào không.
    end note

    :Thiết lập môi trường làm việc
    (workspace_config.setup_workspace);
    note right
        Đảm bảo các thư mục cần thiết
        (ví dụ: `XAUUSD/Reports`) tồn tại.
    end note

    :Tải cấu hình từ file
    (workspace_config.load_config_from_file);

    if (File `workspace.json` tồn tại và hợp lệ?) then (yes)
        :Biến `initial_config` chứa dữ liệu từ file;
    else (no)
        :Biến `initial_config` là một dictionary rỗng `{}`;
    endif

    :Thiết lập hệ thống Logging
    (log_handler.setup_logging);
    note left
        Sử dụng cấu hình logging từ `initial_config`
        hoặc dùng cấu hình mặc định.
    end note

    :Tạo cửa sổ chính Tkinter (`root = tk.Tk()`);

    :Khởi tạo AppUI
    `app = AppUI(root, initial_config)`;
    note
        Truyền cửa sổ `root` và dữ liệu cấu hình `initial_config`
        vào lớp giao diện chính.
        **Luồng thực thi chuyển sang `AppUI.__init__`**
    end note
}

partition "AppUI.__init__: Khởi tạo Giao diện" {
    :Thiết lập thuộc tính cửa sổ (title, geometry);

    :Khởi tạo các biến Tkinter với giá trị MẶC ĐỊNH
    (_init_tk_variables);
    note right
        Tất cả các `tk.StringVar`, `tk.BooleanVar`...
        được gán giá trị ban đầu.
        Ví dụ: `autorun_var` = `False`.
    end note

    :Khởi tạo các trình quản lý
    (HistoryManager, PromptManager);

    :Xây dựng toàn bộ các thành phần UI
    (ui_builder.build_ui);
    note left
        Vẽ tất cả các nút bấm, ô nhập liệu, tab...
        và liên kết chúng với các biến, hàm trong `AppUI`.
    end note

    :Gọi `apply_config(initial_config)`;
    note
        Đây là bước quan trọng để nạp lại cấu hình đã lưu.
    end note

    if (`initial_config` có dữ liệu?) then (yes)
        :Lặp qua `initial_config` và
        GHI ĐÈ các biến Tkinter bằng giá trị đã lưu;
        note right
            Ví dụ: Nếu `workspace.json` có `"autorun": true`,
            thì `autorun_var` sẽ được cập nhật thành `True`.
            Giao diện sẽ hiển thị checkbox "Tự động chạy" được tích.
        end note
    else (no)
        :Giữ nguyên các giá trị mặc định;
    endif

    :Bắt đầu các tác vụ nền;
    note
        - Bắt đầu vòng lặp kiểm tra hàng đợi UI (`poll_ui_queue`).
        - Lên lịch kiểm tra kết nối MT5 định kỳ.
        - Tải lịch sử, JSON, và prompts từ đĩa.
    end note

    :Thiết lập quy trình tắt ứng dụng an toàn
    (protocol("WM_DELETE_WINDOW", self.shutdown));
    note
        **Khởi tạo `AppUI` hoàn tất.**
        **Luồng thực thi quay trở lại `main.py`**
    end note
}

partition "main.py: Vòng lặp chính" {
    :Bắt đầu vòng lặp sự kiện chính
    `root.mainloop()`;
    note right
        Ứng dụng bây giờ đang chạy và
        chờ đợi tương tác từ người dùng.
        Vòng lặp này sẽ chạy cho đến khi
        cửa sổ ứng dụng bị đóng.
    end note
}

stop
@enduml
